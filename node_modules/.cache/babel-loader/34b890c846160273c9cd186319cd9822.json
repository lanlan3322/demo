{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vina/Documents/GitHub/demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/vina/Documents/GitHub/demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/vina/Documents/GitHub/demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Navbar from\"./Navbar\";import{useLocation,useParams}from'react-router-dom';import MarketplaceJSON from\"../Marketplace.json\";import axios from\"axios\";import{useState}from\"react\";import NFTTile from\"./NFTTile\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Profile(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],updateData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),dataFetched=_useState4[0],updateFetched=_useState4[1];var _useState5=useState(\"0x\"),_useState6=_slicedToArray(_useState5,2),address=_useState6[0],updateAddress=_useState6[1];var _useState7=useState(\"0\"),_useState8=_slicedToArray(_useState7,2),totalPrice=_useState8[0],updateTotalPrice=_useState8[1];function getNFTData(_x){return _getNFTData.apply(this,arguments);}function _getNFTData(){_getNFTData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenId){var ethers,sumPrice,provider,signer,addr,contract,transaction,items;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:ethers=require(\"ethers\");sumPrice=0;//After adding your Hardhat network to your metamask, this code will get providers and signers\nprovider=new ethers.providers.Web3Provider(window.ethereum);signer=provider.getSigner();_context2.next=6;return signer.getAddress();case 6:addr=_context2.sent;//Pull the deployed contract instance\ncontract=new ethers.Contract(MarketplaceJSON.address,MarketplaceJSON.abi,signer);//create an NFT Token\n_context2.next=10;return contract.getMyNFTs();case 10:transaction=_context2.sent;_context2.next=13;return Promise.all(transaction.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(i){var tokenURI,meta,price,item;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return contract.tokenURI(i.tokenId);case 2:tokenURI=_context.sent;_context.next=5;return axios.get(tokenURI);case 5:meta=_context.sent;meta=meta.data;price=ethers.utils.formatUnits(i.price.toString(),'ether');item={price:price,tokenId:i.tokenId.toNumber(),seller:i.seller,owner:i.owner,image:meta.image,name:meta.name,description:meta.description};sumPrice+=Number(price);return _context.abrupt(\"return\",item);case 11:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref.apply(this,arguments);};}()));case 13:items=_context2.sent;updateData(items);updateFetched(true);updateAddress(addr);updateTotalPrice(sumPrice.toPrecision(3));case 18:case\"end\":return _context2.stop();}}},_callee2);}));return _getNFTData.apply(this,arguments);}var params=useParams();var tokenId=params.tokenId;if(!dataFetched)getNFTData(tokenId);return/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",style:{\"min-height\":\"100vh\"},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex text-center flex-col mt-11 md:text-2xl text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"My Wallet Address\"}),address]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"301NFT followed\"}),data.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-20\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Total Roylty Contribution\"}),totalPrice,\" ETH\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-20\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Total Roylty Earned\"}),totalPrice,\" ETH\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col text-center items-center mt-11 text-white\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Your NFTs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center flex-wrap max-w-screen-xl\",children:data.map(function(value,index){return/*#__PURE__*/_jsx(NFTTile,{data:value},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 text-xl\",children:data.length==0?\"Oops, No NFT data to display (Are you logged in?)\":\"\"})]})]})]});};","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","Profile","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","getAddress","addr","contract","Contract","abi","getMyNFTs","transaction","Promise","all","map","i","tokenURI","get","meta","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","items","toPrecision","params","length","value","index"],"sources":["/Users/vina/Documents/GitHub/demo/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\n\nexport default function Profile () {\n    const [data, updateData] = useState([]);\n    const [dataFetched, updateFetched] = useState(false);\n    const [address, updateAddress] = useState(\"0x\");\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n    async function getNFTData(tokenId) {\n        const ethers = require(\"ethers\");\n        let sumPrice = 0;\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const addr = await signer.getAddress();\n\n        //Pull the deployed contract instance\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\n\n        //create an NFT Token\n        let transaction = await contract.getMyNFTs()\n\n        /*\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\n        * and creates an object of information that is to be displayed\n        */\n        \n        const items = await Promise.all(transaction.map(async i => {\n            const tokenURI = await contract.tokenURI(i.tokenId);\n            let meta = await axios.get(tokenURI);\n            meta = meta.data;\n\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n            let item = {\n                price,\n                tokenId: i.tokenId.toNumber(),\n                seller: i.seller,\n                owner: i.owner,\n                image: meta.image,\n                name: meta.name,\n                description: meta.description,\n            }\n            sumPrice += Number(price);\n            return item;\n        }))\n\n        updateData(items);\n        updateFetched(true);\n        updateAddress(addr);\n        updateTotalPrice(sumPrice.toPrecision(3));\n    }\n\n    const params = useParams();\n    const tokenId = params.tokenId;\n    if(!dataFetched)\n        getNFTData(tokenId);\n\n    return (\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\n            <Navbar></Navbar>\n            <div className=\"profileClass\">\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\n                <div className=\"mb-5\">\n                    <h2 className=\"font-bold\">My Wallet Address</h2>  \n                    {address}\n                </div>\n            </div>\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\n                    <div>\n                        <h2 className=\"font-bold\">301NFT followed</h2>\n                        {data.length}\n                    </div>\n                    <div className=\"ml-20\">\n                        <h2 className=\"font-bold\">Total Roylty Contribution</h2>\n                        {totalPrice} ETH\n                    </div>\n                    <div className=\"ml-20\">\n                        <h2 className=\"font-bold\">Total Roylty Earned</h2>\n                        {totalPrice} ETH\n                    </div>\n            </div>\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\n                <h2 className=\"font-bold\">Your NFTs</h2>\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\n                    {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                    })}\n                </div>\n                <div className=\"mt-10 text-xl\">\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}